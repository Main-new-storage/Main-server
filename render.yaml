services:
  - type: web
    name: backdoor-ai
    env: docker
    region: ohio  # Choose the region closest to you
    plan: starter  # Use 'starter' for sufficient resources to build scientific packages
    # Docker will use the Dockerfile in the repository root
    # Using entrypoint.sh to start server with explicit port 10000
    envVars:
      - key: PYTHONUNBUFFERED
        value: "true"  # Ensures logs are output immediately
      - key: RENDER
        value: "true"
      - key: MEMORY_ONLY_MODE
        value: "true"  # Use memory-only mode to avoid disk usage issues
      - key: DROPBOX_ENABLED
        value: "true"
      - key: PORT
        value: "10000"  # Explicitly set port to 10000
      - key: STORAGE_MODE
        value: "dropbox"
      - key: MEMORY_OPTIMIZED
        value: "true"
      - key: DROPBOX_DB_FILENAME
        value: "backdoor_ai_db.db"
      - key: DROPBOX_MODELS_FOLDER
        value: "backdoor_models"
      # DROPBOX_API_KEY is now hardcoded in config.py - no need to set it in environment
      - key: NLTK_DATA_DIR  # Use environment variable for NLTK data
        value: "/tmp/nltk_data"
      - key: DATA_DIR  # Use environment variable for data directory
        value: "/tmp/data"
      - key: MODELS_DIR  # Use environment variable for models directory
        value: "/tmp/models"
      - key: GUNICORN_WORKERS
        value: "2"  # Use Gunicorn instead of Flask dev server
      - key: PIP_EXTRA_INDEX_URL  # Include the PyPI index for scientific packages
        value: "https://pypi.org/simple"
      - key: PIP_PREFER_BINARY
        value: "1"
      - key: PIP_ONLY_BINARY
        value: "numpy,scipy,scikit-learn,pandas"
      - key: USE_DROPBOX_STREAMING
        value: "true"  # Stream resources from Dropbox without local caching
      - key: NO_LOCAL_STORAGE
        value: "true"  # Don't use local filesystem storage